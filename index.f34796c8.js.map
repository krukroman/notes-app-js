{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-b81c5717f90f7936.js","src/js/utils/categories.js","src/js/api/getNotes.js","src/js/api/saveNotes.js","src/js/api/addNote.js","src/js/api/deleteNote.js","src/js/api/getIndex.js","src/js/api/updateNote.js","src/js/api/handleArchive.js","src/js/api/getById.js","src/js/utils/getActiveNotes.js","src/js/utils/getArchivedNotes.js","src/js/utils/getNotesStatistics.js","node_modules/@parcel/runtime-js/lib/runtime-9023f7cb3fb4b663.js","src/js/utils/insertCategoryIcon.js","src/js/utils/transformDate.js","src/js/utils/parseDateFromText.js","src/js/utils/notes.js","src/js/utils/refs.js","src/js/utils/getNoteId.js","src/js/actions/onArchiveBtn.js","src/js/actions/onCloseFormBtn.js","src/js/actions/onCreateBtn.js","src/js/actions/onCreateSubmit.js","node_modules/nanoid/index.browser.js","src/js/actions/onDeleteBtn.js","src/js/actions/onEditBtn.js","src/js/actions/onEditSubmit.js","src/js/actions/onShowArchivedBtn.js","src/js/components/ItemContent/ItemContent.js","src/js/components/NoteItem/NoteItem.js","src/js/components/NotesList/NoteList.js","src/js/components/NotFound/NotFound.js","src/js/renderFunctions/renderNotes.js","src/js/components/Modal/Modal.js","src/js/components/CategoriesOptions/CategoriesOptions.js","src/js/components/EditorForm/EditorForm.js","src/js/renderFunctions/renderEditor.js","src/js/components/NotesHeader/NotesHeader.js","src/js/components/SummaryHeader/SummaryHeader.js","src/js/components/MainLayout/MainLayout.js","src/js/renderFunctions/renderMainLayout.js","src/js/components/SummaryItem/SummaryItem.js","src/js/components/SummaryList/SummaryList.js","src/js/renderFunctions/renderSummaryList.js","src/js/renderFunctions/unmountEditor.js","src/js/app.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.f34796c8.js\\\",\\\"8sfzT\\\":\\\"sprite.af4edf28.svg\\\",\\\"7mVsD\\\":\\\"index.09103b59.css\\\"}\"));","const CATEGORIES = {\r\n  IDEA: 'Idea',\r\n  QUOTE: 'Quote',\r\n  RANDOM_THOUGHT: 'Random Thought',\r\n  TASK: 'Task'\r\n};\r\n\r\nexport default CATEGORIES;\r\n","import { NOTES } from '../utils';\r\n\r\nconst getNotes = () => {\r\n  if (localStorage.hasOwnProperty('notes')) {\r\n    const parsedNotes = JSON.parse(localStorage.getItem('notes'));\r\n    return parsedNotes;\r\n  }\r\n  return NOTES;\r\n};\r\n\r\nexport default getNotes;\r\n","const saveNotes = notes => localStorage.setItem('notes', JSON.stringify(notes));\r\n\r\nexport default saveNotes;\r\n","import getNotes from './getNotes';\r\nimport saveNotes from './saveNotes';\r\n\r\nconst addNote = note => {\r\n  const notes = getNotes();\r\n  notes.push(note);\r\n  saveNotes(notes);\r\n};\r\n\r\nexport default addNote;\r\n","import getNotes from './getNotes';\r\nimport saveNotes from './saveNotes';\r\n\r\nconst deleteNote = id => {\r\n  const notes = getNotes().filter(note => note.id !== id);\r\n  saveNotes(notes);\r\n};\r\n\r\nexport default deleteNote;\r\n","const getIndex = (notes, id) => {\r\n  return notes.findIndex(note => note.id === id);\r\n};\r\n\r\nexport default getIndex;\r\n","import getNotes from './getNotes';\r\nimport getIndex from './getIndex';\r\nimport saveNotes from './saveNotes';\r\n\r\nconst updateNote = (id, data) => {\r\n  const notes = getNotes();\r\n  let index = getIndex(notes, id);\r\n  notes[index] = { ...notes[index], ...data };\r\n  saveNotes(notes);\r\n};\r\n\r\nexport default updateNote;\r\n","import getNotes from './getNotes';\r\nimport getIndex from './getIndex';\r\nimport saveNotes from './saveNotes';\r\n\r\nconst handleArchive = id => {\r\n  const notes = getNotes();\r\n  let index = getIndex(notes, id);\r\n  const archiveStatus = notes[index].archived;\r\n  notes[index] = { ...notes[index], archived: !archiveStatus };\r\n  saveNotes(notes);\r\n};\r\n\r\nexport default handleArchive;\r\n","import getNotes from './getNotes';\r\n\r\nconst getById = id => {\r\n  const notes = getNotes();\r\n  return notes.find(note => note.id === id);\r\n};\r\n\r\nexport default getById;\r\n","import { getNotes } from '../api';\r\n\r\nconst getActiveNotes = () => getNotes().filter(note => !note.archived);\r\n\r\nexport default getActiveNotes;\r\n","import { getNotes } from '../api';\r\n\r\nconst getArchivedNotes = () => getNotes().filter(note => note.archived);\r\n\r\nexport default getArchivedNotes;\r\n","import { getNotes } from '../api';\r\n\r\nconst groupByCategory = () => {\r\n  return getNotes().reduce((acc, note) => {\r\n    acc[note.category] = acc[note.category] || [];\r\n    acc[note.category].push(note);\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nconst getNotesStatistics = () => {\r\n  const notesByCategory = groupByCategory();\r\n  let result = [];\r\n\r\n  for (const category in notesByCategory) {\r\n    if (Object.hasOwnProperty.call(notesByCategory, category)) {\r\n      const element = notesByCategory[category];\r\n      const activeNotes = element.filter(note => !note.archived);\r\n      const archivedNotes = element.filter(note => note.archived);\r\n      result.push({\r\n        category,\r\n        active: activeNotes.length,\r\n        archived: archivedNotes.length\r\n      });\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default getNotesStatistics;\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8sfzT\")).toString();","import CATEGORIES from './categories';\r\nimport sprite from '../../images/icons/sprite.svg';\r\n\r\nconst insertCategoryIcon = category => {\r\n  switch (category) {\r\n    case CATEGORIES.IDEA:\r\n      return `${sprite}#icon-light`;\r\n    case CATEGORIES.QUOTE:\r\n      return `${sprite}#icon-quote`;\r\n    case CATEGORIES.RANDOM_THOUGHT:\r\n      return `${sprite}#icon-thinking`;\r\n    case CATEGORIES.TASK:\r\n      return `${sprite}#icon-cart`;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default insertCategoryIcon;\r\n","const transformDate = string => {\r\n  const date = new Date(string);\r\n  const month = Intl.DateTimeFormat('en', { month: 'long' }).format(date);\r\n  const day = date.getDate();\r\n  const year = date.getFullYear();\r\n\r\n  return `${month} ${day}, ${year}`;\r\n};\r\n\r\nexport default transformDate;\r\n","const re =\r\n  /((0?[1-9]|1[012])[- \\/.](0?[1-9]|[12][0-9]|3[01])[- \\/.](19|20)?[0-9]{2})/gm;\r\n\r\nconst parseDateFromText = string => {\r\n  return string.match(re) ? string.match(re).join(', ').replace(/-/g, '/') : '';\r\n};\r\n\r\nexport default parseDateFromText;\r\n","const NOTES = [\r\n  {\r\n    id: '1',\r\n    name: 'Lorem ipsum dolor sit amet.',\r\n    created: new Date(),\r\n    category: 'Idea',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit 05-19-2022. Cum quisquam nesciunt animi ab eos nihil',\r\n    archived: false\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Lorem ipsum',\r\n    created: new Date(),\r\n    category: 'Idea',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum quisquam nesciunt animi ab eos nihil',\r\n    archived: false\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Lorem ipsum dolor',\r\n    created: new Date(),\r\n    category: 'Quote',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum quisquam nesciunt animi ab eos nihil',\r\n    archived: false\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Lorem ipsum dolor sit',\r\n    created: new Date(),\r\n    category: 'Random Thought',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum quisquam nesciunt animi ab eos nihil',\r\n    archived: false\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Cum quisquam nesciunt',\r\n    created: new Date(),\r\n    category: 'Task',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit 04/09/22. Cum quisquam nesciunt animi ab eos nihil 04/18/22',\r\n    archived: false\r\n  },\r\n  {\r\n    id: '6',\r\n    name: ' Cum quisquam nesciunt animi ab eos',\r\n    created: new Date(),\r\n    category: 'Task',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum quisquam nesciunt animi ab eos nihil',\r\n    archived: false\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Cum quisquam nesciunt animi ab eos nihil',\r\n    created: new Date(),\r\n    category: 'Random Thought',\r\n    content:\r\n      'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum quisquam nesciunt animi ab eos nihil',\r\n    archived: false\r\n  }\r\n];\r\n\r\nexport default NOTES;\r\n","const refs = {\r\n  appContainer: () => document.getElementById('app'),\r\n  notesContainer: () => document.querySelector('.notes__content'),\r\n  summaryContainer: () => document.querySelector('.summary__content'),\r\n  portalContainer: () => document.getElementById('portal'),\r\n  createNoteBtn: () => document.querySelector('.create__btn'),\r\n  showArchivedBtn: () => document.querySelector('.archived'),\r\n  editBtns: () => document.querySelectorAll('.edit'),\r\n  archiveBtns: () => document.querySelectorAll('.archive'),\r\n  deleteBtns: () => document.querySelectorAll('.delete'),\r\n  editForm: () => document.getElementById('form'),\r\n  closeFormBtn: () => document.querySelector('.form__close__btn')\r\n};\r\n\r\nexport default refs;\r\n","const getNoteId = e => {\r\n  return e.target.parentElement.parentElement.parentElement.id;\r\n};\r\n\r\nexport default getNoteId;\r\n","import { getNoteId } from '../utils';\r\nimport { getById, handleArchive } from '../api';\r\nimport { renderNotes, renderSummaryList } from '../renderFunctions';\r\nimport { getActiveNotes, getArchivedNotes } from '../utils';\r\n\r\nconst onArchiveBtn = e => {\r\n  const id = getNoteId(e);\r\n  const note = getById(id);\r\n  handleArchive(id);\r\n  note.archived\r\n    ? renderNotes(getArchivedNotes())\r\n    : renderNotes(getActiveNotes());\r\n  renderSummaryList();\r\n};\r\n\r\nexport default onArchiveBtn;\r\n","import { unmountEditor } from '../renderFunctions';\r\n\r\nconst onCloseFormBtn = () => unmountEditor();\r\n\r\nexport default onCloseFormBtn;\r\n","import { renderEditor } from '../renderFunctions';\r\n\r\nconst onCreateBtn = e => {\r\n  renderEditor();\r\n};\r\n\r\nexport default onCreateBtn;\r\n","import { nanoid } from 'nanoid';\r\nimport { addNote } from '../api';\r\nimport {\r\n  renderNotes,\r\n  renderSummaryList,\r\n  unmountEditor\r\n} from '../renderFunctions';\r\nimport { getActiveNotes } from '../utils';\r\n\r\nconst onCreateSubmit = e => {\r\n  e.preventDefault();\r\n  const id = nanoid(10);\r\n  const created = new Date();\r\n  const formData = new FormData(e.currentTarget);\r\n  const note = Object.fromEntries(formData);\r\n\r\n  if (note.category === 'default') {\r\n    alert('Choose category');\r\n    return;\r\n  }\r\n\r\n  const newNote = {\r\n    id,\r\n    created,\r\n    ...note,\r\n    archived: false\r\n  };\r\n\r\n  addNote(newNote);\r\n  unmountEditor();\r\n  renderNotes(getActiveNotes());\r\n  renderSummaryList();\r\n};\r\n\r\nexport default onCreateSubmit;\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { getNoteId } from '../utils';\r\nimport { getById, deleteNote } from '../api';\r\nimport { renderNotes, renderSummaryList } from '../renderFunctions';\r\nimport { getActiveNotes, getArchivedNotes } from '../utils';\r\n\r\nconst onDeleteBtn = e => {\r\n  const id = getNoteId(e);\r\n  const note = getById(id);\r\n  deleteNote(id);\r\n  note.archived\r\n    ? renderNotes(getArchivedNotes())\r\n    : renderNotes(getActiveNotes());\r\n  renderSummaryList();\r\n};\r\n\r\nexport default onDeleteBtn;\r\n","import { getById } from '../api';\r\nimport { getNoteId } from '../utils';\r\nimport { renderEditor } from '../renderFunctions';\r\n\r\nconst onEditBtn = e => {\r\n  const id = getNoteId(e);\r\n  const note = getById(id);\r\n  renderEditor(note);\r\n};\r\n\r\nexport default onEditBtn;\r\n","import { updateNote } from '../api';\r\nimport {\r\n  renderNotes,\r\n  renderSummaryList,\r\n  unmountEditor\r\n} from '../renderFunctions';\r\nimport { getActiveNotes, getArchivedNotes } from '../utils';\r\n\r\nconst onEditSubmit = (e, note) => {\r\n  e.preventDefault();\r\n  const id = note.id;\r\n  const formData = new FormData(e.currentTarget);\r\n  const updatedNote = Object.fromEntries(formData);\r\n\r\n  updateNote(id, updatedNote);\r\n  unmountEditor();\r\n  note.archived\r\n    ? renderNotes(getArchivedNotes())\r\n    : renderNotes(getActiveNotes());\r\n  renderSummaryList();\r\n};\r\n\r\nexport default onEditSubmit;\r\n","import { refs } from '../utils';\r\nimport { renderNotes } from '../renderFunctions';\r\nimport { getActiveNotes, getArchivedNotes } from '../utils';\r\n\r\nlet showArchived = false;\r\n\r\nconst toggleShowArchived = () => {\r\n  showArchived = !showArchived;\r\n  return showArchived;\r\n};\r\n\r\nconst onShowArchivedBtn = () => {\r\n  const createNoteBtn = refs.createNoteBtn();\r\n  toggleShowArchived();\r\n\r\n  if (showArchived) {\r\n    renderNotes(getArchivedNotes());\r\n    createNoteBtn.style = 'display: none';\r\n  } else {\r\n    renderNotes(getActiveNotes());\r\n    createNoteBtn.style = 'display: block';\r\n  }\r\n};\r\n\r\nexport default onShowArchivedBtn;\r\n","const ItemContent = renderData => {\r\n  return Object.values(renderData)\r\n    .map(value => `<div class=\"col\">${value}</div>`)\r\n    .join('');\r\n};\r\n\r\nexport default ItemContent;\r\n","import sprite from '../../../images/icons/sprite.svg';\r\nimport ItemContent from '../ItemContent';\r\nimport {\r\n  insertCategoryIcon,\r\n  transformDate,\r\n  parseDateFromText\r\n} from '../../utils';\r\n\r\nconst NoteItem = note => {\r\n  const { id, name, created, category, content, archived } = note;\r\n\r\n  const insertArchiveIcon = () => {\r\n    return archived\r\n      ? `${sprite}#icon-archive-out`\r\n      : `${sprite}#icon-archive-in`;\r\n  };\r\n\r\n  const transformedDate = transformDate(created);\r\n\r\n  const dates = parseDateFromText(content);\r\n\r\n  return `<div id=\"${id}\" class=\"row\">\r\n            <div class=\"icon\">\r\n                <svg width=\"20\" height=\"20\">\r\n                  <use href=\"${insertCategoryIcon(category)}\"></use>\r\n                </svg>\r\n            </div>\r\n            ${ItemContent({\r\n              name,\r\n              created: transformedDate,\r\n              category,\r\n              content,\r\n              dates\r\n            })}                \r\n            <div class=\"actions\">\r\n              <div class=\"button__group\">\r\n                <button type=\"button\" class=\"edit\">\r\n                  <svg width=\"20\" height=\"20\">\r\n                    <use href=\"${sprite}#icon-edit\"></use>\r\n                  </svg>\r\n                </button>\r\n                <button type=\"button\" class=\"archive\">\r\n                  <svg width=\"20\" height=\"20\">\r\n                    <use\r\n                      href=\"${insertArchiveIcon()}\"\r\n                    ></use>\r\n                  </svg>\r\n                </button>\r\n                <button type=\"button\" class=\"delete\">\r\n                  <svg width=\"20\" height=\"20\">\r\n                    <use href=\"${sprite}#icon-delete\"></use>\r\n                  </svg>\r\n                </button>                    \r\n              </div>\r\n            </div>\r\n          </div>`;\r\n};\r\n\r\nexport default NoteItem;\r\n","import NoteItem from '../NoteItem';\r\n\r\nconst NoteLIst = notes => {\r\n  return notes.map(note => NoteItem(note)).join('');\r\n};\r\n\r\nexport default NoteLIst;\r\n","import * as s from './NotFound.module.scss';\r\n\r\nconst NotFound = () =>\r\n  `<div class=\"${s.notFound}\">You do not have any notes, please add one</div>`;\r\n\r\nexport default NotFound;\r\n","import { refs } from '../utils';\r\nimport { onEditBtn, onArchiveBtn, onDeleteBtn } from '../actions';\r\nimport { getActiveNotes } from '../utils';\r\nimport NoteLIst from '../components/NotesList';\r\nimport NotFound from '../components/NotFound';\r\n\r\nconst addEventListeners = () => {\r\n  const editBtns = refs.editBtns();\r\n  const archiveBtns = refs.archiveBtns();\r\n  const deleteBtns = refs.deleteBtns();\r\n\r\n  editBtns.forEach(btn => {\r\n    btn.addEventListener('click', onEditBtn);\r\n  });\r\n\r\n  archiveBtns.forEach(btn => {\r\n    btn.addEventListener('click', onArchiveBtn);\r\n  });\r\n\r\n  deleteBtns.forEach(btn => {\r\n    btn.addEventListener('click', onDeleteBtn);\r\n  });\r\n};\r\n\r\nconst renderNotes = notes => {\r\n  const notesWrapper = refs.notesContainer();\r\n  notesWrapper.textContent = '';\r\n  notesWrapper.insertAdjacentHTML(\r\n    'beforeend',\r\n    notes.length >= 1 ? NoteLIst(notes) : NotFound()\r\n  );\r\n  notes.length >= 1 && addEventListeners();\r\n};\r\n\r\nexport default renderNotes;\r\n","const Modal = children => {\r\n  return `<div class=\"backdrop\">\r\n        <div class=\"modal\">\r\n          ${children}\r\n        </div>\r\n      </div>`;\r\n};\r\n\r\nexport default Modal;\r\n","import { CATEGORIES } from '../../utils';\r\n\r\nconst CategoriesOptions = (category = '') => {\r\n  if (category) {\r\n    return Object.values(CATEGORIES)\r\n      .filter(value => value !== category)\r\n      .map(value => `<option value=\"${value}\">${value}</option>`)\r\n      .join('');\r\n  }\r\n\r\n  return Object.values(CATEGORIES)\r\n    .map(value => `<option value=\"${value}\">${value}</option>`)\r\n    .join('');\r\n};\r\n\r\nexport default CategoriesOptions;\r\n","import CategoriesOptions from '../CategoriesOptions';\r\n\r\nconst EditorForm = ({ name = '', category = '', content = '' }) => {\r\n  return `<form id=\"form\" action=''>\r\n            <label for=\"name\">Note name</label>\r\n            <input id=\"name\" name=\"name\" type=\"text\" value=\"${name}\" required />\r\n            <label for=\"category\">Category</label>\r\n            <select name=\"category\" id=\"category\">\r\n              <option\r\n               value=\"${category ? category : 'default'}\"\r\n               selected>\r\n               ${category ? category : 'Choose category'}\r\n              </option>\r\n              ${CategoriesOptions(category)}\r\n            </select>\r\n            <label for=\"content\">Content</label>\r\n            <textarea\r\n              name=\"content\"\r\n              id=\"content\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              required\r\n            >${content}</textarea>\r\n            <div class=\"form__button__group\">\r\n              <button type=\"button\" class='form__close__btn'>Close</button>\r\n              <button type=\"submit\">Save</button>\r\n            </div>            \r\n          </form>`;\r\n};\r\n\r\nexport default EditorForm;\r\n","import { refs } from '../utils';\r\nimport Modal from '../components/Modal';\r\nimport EditorForm from '../components/EditorForm';\r\nimport { onCreateSubmit, onEditSubmit, onCloseFormBtn } from '../actions';\r\n\r\nconst portal = refs.portalContainer();\r\n\r\nconst renderEditor = (note = false) => {\r\n  portal.insertAdjacentHTML('beforeend', Modal(EditorForm(note)));\r\n  refs.closeFormBtn().addEventListener('click', onCloseFormBtn);\r\n\r\n  if (note) {\r\n    refs.editForm().addEventListener('submit', e => onEditSubmit(e, note));\r\n    return;\r\n  }\r\n  refs.editForm().addEventListener('submit', onCreateSubmit);\r\n};\r\n\r\nexport default renderEditor;\r\n","import sprite from '../../../images/icons/sprite.svg';\r\n\r\nconst NotesHeader = () => {\r\n  return `<div class=\"notes__item notes__header row\">\r\n            <div class=\"icon\"></div>\r\n            <div class=\"col\">Name</div>\r\n            <div class=\"col\">Created</div>\r\n            <div class=\"col\">Category</div>\r\n            <div class=\"col\">Content</div>\r\n            <div class=\"col\">Dates</div>\r\n            <div class=\"actions\">\r\n                <div class=\"button__group\">\r\n                <button type=\"button\" class=\"archived\">\r\n                    <svg width=\"20\" height=\"20\">\r\n                    <use href=\"${sprite}#icon-archive-in\"></use>\r\n                    </svg>\r\n                </button>\r\n                <button type=\"button\">\r\n                    <svg width=\"20\" height=\"20\">\r\n                    <use href=\"${sprite}#icon-delete\"></use>\r\n                    </svg>\r\n                </button>\r\n                <!-- end of button group -->\r\n                </div>\r\n            </div>\r\n          </div>`;\r\n};\r\n\r\nexport default NotesHeader;\r\n","const SummaryHeader = () => {\r\n  return `<div class=\"notes__item notes__header row\">\r\n            <div class=\"icon\"></div>\r\n            <div class=\"col\">Note Category</div>\r\n            <div class=\"col\">Active</div>\r\n            <div class=\"col\">Archived</div>\r\n          </div>`;\r\n};\r\n\r\nexport default SummaryHeader;\r\n","import NotesHeader from '../NotesHeader';\r\nimport SummaryHeader from '../SummaryHeader';\r\n\r\nconst MainLayOut = () => {\r\n  return `<div class=\"notes__list\">\r\n            ${NotesHeader()}\r\n            <div class=\"notes__content\"></div>\r\n            <button class=\"create__btn\" type=\"button\">Create note</button>\r\n          </div>\r\n          <div class=\"notes__summary\">\r\n            ${SummaryHeader()}\r\n            <div class=\"summary__content\"></div>\r\n          </div>`;\r\n};\r\n\r\nexport default MainLayOut;\r\n","import { refs } from '../utils';\r\nimport { onCreateBtn, onShowArchivedBtn } from '../actions';\r\nimport MainLayOut from '../components/MainLayout';\r\n\r\nconst addEventListeners = () => {\r\n  const showArchivedBtn = refs.showArchivedBtn();\r\n  const createBtn = refs.createNoteBtn();\r\n  showArchivedBtn.addEventListener('click', onShowArchivedBtn);\r\n  createBtn.addEventListener('click', onCreateBtn);\r\n};\r\n\r\nconst renderMainLayout = () => {\r\n  const app = refs.appContainer();\r\n  app.insertAdjacentHTML('beforeend', MainLayOut());\r\n  addEventListeners();\r\n};\r\n\r\nexport default renderMainLayout;\r\n","import { insertCategoryIcon } from '../../utils';\r\nimport ItemContent from '../ItemContent';\r\n\r\nconst SummaryItem = data => {\r\n  const { category } = data;\r\n\r\n  return `<div class=\"row\">\r\n            <div class=\"icon\">\r\n                <svg width=\"20\" height=\"20\">\r\n                  <use href=\"${insertCategoryIcon(category)}\"></use>\r\n                </svg>\r\n            </div>\r\n            ${ItemContent(data)}                \r\n            <!-- end of notes row -->\r\n          </div>`;\r\n};\r\n\r\nexport default SummaryItem;\r\n","import SummaryItem from '../SummaryItem';\r\n\r\nconst SummaryLIst = statistics => {\r\n  return statistics.map(data => SummaryItem(data)).join('');\r\n};\r\n\r\nexport default SummaryLIst;\r\n","import { refs } from '../utils';\r\nimport { getNotesStatistics } from '../utils';\r\nimport SummaryList from '../components/SummaryList';\r\nimport NotFound from '../components/NotFound';\r\n\r\nconst renderSummaryList = () => {\r\n  const summaryWrapper = refs.summaryContainer();\r\n  const statistics = getNotesStatistics();\r\n  summaryWrapper.textContent = '';\r\n  summaryWrapper.insertAdjacentHTML(\r\n    'beforeend',\r\n    statistics.length >= 1 ? SummaryList(statistics) : NotFound()\r\n  );\r\n};\r\n\r\nexport default renderSummaryList;\r\n","import { refs } from '../utils';\r\n\r\nconst portal = refs.portalContainer();\r\n\r\nconst unmountEditor = () => (portal.textContent = '');\r\n\r\nexport default unmountEditor;\r\n","import {\r\n  renderMainLayout,\r\n  renderNotes,\r\n  renderSummaryList\r\n} from './renderFunctions/';\r\n\r\nimport { getActiveNotes } from './utils';\r\n\r\nconst App = {\r\n  init() {\r\n    renderMainLayout();\r\n    renderNotes(getActiveNotes());\r\n    renderSummaryList();\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import './sass/main.scss';\r\nimport App from './js/app';\r\n\r\nApp.init();\r\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$562a2cec6e65fd40$export$2e2bcd8739ae039","IDEA","QUOTE","RANDOM_THOUGHT","TASK","$c87c29bb67038bea$export$2e2bcd8739ae039","localStorage","hasOwnProperty","getItem","$f81efc93c2f86ec4$export$2e2bcd8739ae039","$138f3514539e84e6$export$2e2bcd8739ae039","notes","setItem","stringify","$60c90135e3d152c2$export$2e2bcd8739ae039","note","push","$62b270c33fc9d746$export$2e2bcd8739ae039","filter","$64e20464e2f47792$export$2e2bcd8739ae039","findIndex","$04062b8ae696f132$export$2e2bcd8739ae039","data","index","$0f2d11b23d1cae7c$export$2e2bcd8739ae039","archiveStatus","archived","$45509b1e4bad956c$export$2e2bcd8739ae039","find","$8f65433ece2439c1$export$2e2bcd8739ae039","$3ca6b6dc0cba5ff1$export$2e2bcd8739ae039","$364de1989a305f4c$export$2e2bcd8739ae039","notesByCategory","reduce","acc","category","result","call","element","activeNotes","archivedNotes","active","$be38923d7f70d1bd$exports","URL","resolve","import","meta","url","toString","$a1ea6db3270cc54b$export$2e2bcd8739ae039","$parcel$interopDefault","$539becd4130460b7$export$2e2bcd8739ae039","string","date","Date","Intl","DateTimeFormat","month","format","getDate","getFullYear","$1cd5cb975018ff99$var$re","$1cd5cb975018ff99$export$2e2bcd8739ae039","match","join","replace","name","created","content","$0231f23712a163b4$export$2e2bcd8739ae039","appContainer","document","getElementById","notesContainer","querySelector","summaryContainer","portalContainer","createNoteBtn","showArchivedBtn","editBtns","querySelectorAll","archiveBtns","deleteBtns","editForm","closeFormBtn","$269c779ab9b195e8$export$2e2bcd8739ae039","e","target","parentElement","$2a7e7cd4bd1f7fc5$export$2e2bcd8739ae039","$6e51ffb46b2b83c1$export$2e2bcd8739ae039","$5eab22b467c7fbfb$export$2e2bcd8739ae039","$4d483c53b9a45d49$export$2e2bcd8739ae039","$b5c993c0cd11b0a1$export$2e2bcd8739ae039","$29410fd285fdf47e$export$2e2bcd8739ae039","$6a124a1916c9942a$export$2e2bcd8739ae039","$a5c3fb0c62028a5f$export$2e2bcd8739ae039","preventDefault","size","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","$cf399e049a9c4d34$export$ac4959f4f1338dfc","formData","FormData","currentTarget","fromEntries","alert","newNote","$cbd724d9cc27da05$export$2e2bcd8739ae039","$ee0a945907e53f3f$export$2e2bcd8739ae039","$e2bb367ddc9a68dc$export$2e2bcd8739ae039","updatedNote","$b35c3540a7588bd0$var$showArchived","$b35c3540a7588bd0$export$2e2bcd8739ae039","style","$14334d439e7c4b65$export$2e2bcd8739ae039","renderData","values","map","value","transformedDate","dates","$d8456dfe01567431$export$2e2bcd8739ae039","$3bbf5a0903d254c0$export$2e2bcd8739ae039","$289320baea8a1751$export$2e2bcd8739ae039","notesWrapper","textContent","insertAdjacentHTML","forEach","btn","addEventListener","$6e51ffb46b2b83c1$var$addEventListeners","children","$e32afe36f0d31985$export$2e2bcd8739ae039","$6a124a1916c9942a$var$portal","$451492fae9bbe1fd$export$2e2bcd8739ae039","$e7eb5fba280f8684$export$2e2bcd8739ae039","$96fa72dc6a62eaf5$export$2e2bcd8739ae039","$8a88d0db77fec9c0$export$2e2bcd8739ae039","$e721ecefa67f0415$export$2e2bcd8739ae039","createBtn","$8a88d0db77fec9c0$var$addEventListeners","$ec6932ab5299513b$export$2e2bcd8739ae039","statistics","$1994e6c5bbf07607$export$2e2bcd8739ae039","summaryWrapper","$b5c993c0cd11b0a1$var$portal","init"],"version":3,"file":"index.f34796c8.js.map"}